import 'package:sift_loan/feature/auth/domain/entities/customer_details.dart';

class CustomerDetailsModel extends CustomerDetails {
  const CustomerDetailsModel({
    required super.accountNumber,
    required super.customerNumber,
    required super.accountName,
    required super.netBalance,
    required super.productName,
    required super.emailAddress,
    required super.mobileNumber,
    required super.accountOfficer,
    required super.currencyCode,
    required super.branchCode,
    required super.branchName,
    required super.profitCenterMiscode,
    required super.accountOfficerMiscode,
    required super.teamMiscode,
    required super.amountCreditMtd,
    required super.amountDebitMtd,
    required super.pndStatus,
    required super.pncStatus,
    required super.frozenStatus,
    required super.blockStatus,
    required super.dormantStatus,
    required super.recordStatus,
    required super.authStatus,
  });

  factory CustomerDetailsModel.fromJson(Map<String, dynamic> json) {
    return CustomerDetailsModel(
      accountNumber: json['account_no'],
      customerNumber: json['customer_no'],
      accountName: json['account_name'],
      netBalance: json['net_balance'] ?? "",
      productName: json['product_name'] ?? "",
      emailAddress: json['email_address'] ?? "",
      mobileNumber: json['mobile_no'] ?? "",
      accountOfficer: json['account_officer'] ?? "",
      currencyCode: json['currency_code'] ?? "",
      branchCode: json['branch_code'] ?? "",
      branchName: json['branch_name'] ?? "",
      profitCenterMiscode: json['profitcenter_miscode'] ?? "",
      accountOfficerMiscode: json['accountofficer_miscode'] ?? "",
      teamMiscode: json['team_miscode'] ?? "",
      amountCreditMtd: json['amountcredit_mtd'] ?? 0.0,
      amountDebitMtd: json['amountdebit_mtd'] ?? 0.0,
      pndStatus: json['pnd_status'] ?? "",
      pncStatus: json['pnc_status'] ?? "",
      frozenStatus: json['frozen_status'] ?? "",
      blockStatus: json['block_status'] ?? "",
      dormantStatus: json['dormant_status'] ?? "",
      recordStatus: json['record_status'] ?? "",
      authStatus: json['auth_status'] ?? "",
    );
  }

  factory CustomerDetailsModel.dummy() => const CustomerDetailsModel(
        accountNumber: '1234567890',
        customerNumber: 'customer_no',
        accountName: 'Tunde Chukwuma Mohammed',
        netBalance: 'net_balance',
        productName: 'product_name',
        emailAddress: 'tunde@gmail.com',
        mobileNumber: '09012341234',
        accountOfficer: 'DOLAMU TIMILEHIN OGUNDIRAN:12770820:08135261826:Dolamu.Ogundiran@ACCESSBANKPLC.com',
        currencyCode: 'currency_code',
        branchCode: 'branch_code',
        branchName: 'branch_name',
        profitCenterMiscode: 'profitcenter_miscode',
        accountOfficerMiscode: 'accountofficer_miscode',
        teamMiscode: 'team_miscode',
        amountCreditMtd: 0,
        amountDebitMtd: 0,
        pndStatus: 'pnd_status',
        pncStatus: 'pnc_status',
        frozenStatus: 'frozen_status',
        blockStatus: 'block_status',
        dormantStatus: 'dormant_status',
        recordStatus: 'record_status',
        authStatus: 'auth_status',
      );

  @override
  CustomerDetailsModel copyWith({
    String? accountName,
    String? accountNumber,
    String? emailAddress,
    String? mobileNumber,
  }) {
    return CustomerDetailsModel(
      accountNumber: accountNumber ?? this.accountNumber,
      customerNumber: accountNumber ?? customerNumber,
      accountName: accountName ?? this.accountName,
      netBalance: 'net_balance',
      productName: 'product_name',
      emailAddress: 'tunde@gmail.com',
      mobileNumber: '09012341234',
      accountOfficer: 'account_officer',
      currencyCode: 'currency_code',
      branchCode: 'branch_code',
      branchName: 'branch_name',
      profitCenterMiscode: 'profitcenter_miscode',
      accountOfficerMiscode: 'accountofficer_miscode',
      teamMiscode: 'team_miscode',
      amountCreditMtd: 0,
      amountDebitMtd: 0,
      pndStatus: 'pnd_status',
      pncStatus: 'pnc_status',
      frozenStatus: 'frozen_status',
      blockStatus: 'block_status',
      dormantStatus: 'dormant_status',
      recordStatus: 'record_status',
      authStatus: 'auth_status',
    );
  }
}
